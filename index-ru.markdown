---
layout: main-ru
title: GWT + mvp4g — лэйауты, порталы, портлеты
---

# GWT + mvp4g: лэйауты, порталы, портлеты

[EN](./index.html) - [RU](./index-ru.html)

(В данный момент страницы создаются, если вы обнаружите некрасивую или недоделанную страницу, не беспокойтесь)

## Вступление

![mvp4g logo](http://mvp4g.googlecode.com/svn/logo/mvp4g-logo-small.png)

Несомненно, сейчас уже многие знают, что такое [GWT](http://code.google.com/webtoolkit/). Многие знают, что это за концепция — [MVP](http://en.wikipedia.org/wiki/Model-view-presenter). При этом, ещё немногие слышали про фреймворк [mvp4g](http://code.google.com/p/mvp4g/) (облегчённая реализация MVP для GWT) — а я бы хотел, чтобы на него обратили внимание как можно больше GWT-программистов: фреймворк значительно упрощает написание MVP-кода и явно повышает его наглядность. По этой причине я делал о нём [доклад](http://addconf.ru/event.sdf/ru/add_2011/authors/AntonKotenko/313) на конференции [ADDConf](http://addconf.ru), видео которого я выложу отдельно. По этой же причине хочу продемонстрировать вам, как с его помощью можно относительно легко реализовать механизм порталов и портлетов: связывание страниц с лэйаутами и наполнение лэйаутов виджетами (без дрэг-н-дропа, извините).

Фреймворк сам по себе помогает писать приложения, в которых либо не происходит значительных изменений во внутренней части страницы, либо вообще сменяется только её центральная часть. Нельзя сказать, что фреймворк заточен на это — в ближайшем будущем эта ситуация может измениться, тем не менее на данный момент это так.

Однако в [нашем проекте](http://experika.com), в какой-то момент, накопилась критическая масса страниц с нескрываемо схожим расположением виджетов и мы с [Виталием](http://gashock.blogspot.com/) (который и познакомил меня с этим фреймворком) и [Сергеем](http://lazio.com.ua/) (верстальщиком, который разобрался в хитросплетениях виджетов GWT)  решили, что пора эти вещи структурировать и генерализировать. Так родился набор лэйаутов, наречённых именами известных артистов, существующие страницы были распределены по этим лэйаутам и начался рефакторинг (который, конечно же, не только избавил нас от некоторых набивших оскомину костылей, но и добавил десяток новых багов). Кроме того, мы с удовольствием убрали повторяющиеся реализации виджетов, которые приходилось делать из-за их различного поведения на разных страницах. Квинтэссенция этого рефакторинга, полностью отделённая от логики проекта и тех багов, которые он от проекта получил в наследство, собственно, и описана в этой статье.

## Где посмотреть?

Исходный код лежит на github: [github.com/shamansir/gwt-mvp4g-layouting-demo](https://github.com/shamansir/gwt-mvp4g-layouting-demo).

В исполняемом и кликабельном состоянии (что называется _in action_) пример доступен на GAE: [gwt-mvp4g-layouting-demo.appspot.com](http://gwt-mvp4g-layouting-demo.appspot.com/). Это чисто технический пример, поэтому в нём нет никакого дизайна.

Документация на русском также расположена на github: [shamansir.github.com/gwt-mvp4g-layouting-demo](http://shamansir.github.com/gwt-mvp4g-layouting-demo/index-ru.html)

Код разделён на пакеты `client`, `shared`, `server` и `lib`: первые три пакета содержат только код, относящийся к примеру, а последний пакет — код самой библиотеки, который можно даже выделить в отдельный `.jar`.

* [Что показывают?](./demonstrates-ru.html)
* [Лэйауты](./layouts-ru.html)
* [Термины](./definitions-ru.html)
* [Страницы](./pages-ru.html)
* [Сценарии](./scenario-ru.html)
* [Как это работает?](./works-how-ru.html)

## Ссылки

* Доклад о GWT + mvp4g. [Слайды](http://shamansir-ru.tumblr.com/post/5237785159/gwt-mvp4g-slides). Видео, [ч1](http://vimeo.com/shamansir/gwt-mvp4g-ru-p1), [ч2](http://vimeo.com/shamansir/gwt-mvp4g-ru-p2), [ч3](http://vimeo.com/shamansir/gwt-mvp4g-ru-p3).
* Русская группа GWT на Google Groups: [google-web-toolkit-ru](https://groups.google.com/forum/#!forum/google-web-toolkit-ru)

